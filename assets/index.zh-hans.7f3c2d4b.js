export default"# 样式\n\nMilkdown 默认不提供样式。这意味着，你可以导入甚至自定义编辑器主题。\n\n## 选择一：针对已有 HTML 结构进行样式编写\n\n整个编辑器是渲染在以 `milkdown` 为类名的 HTML 容器中的，且可编辑部分 `editor` 也被包含其中。你可以像下面例子中的那样来编写编辑器样式。\n\n```css\n.milkdown .editor p {\n    margin: 1rem 0;\n}\n```\n\n针对每一个 node/mark，Milkdown 都为其提供了一个默认的 css 类名，比如：每一个 `<p>` 节点的 `paragraph` 类名：\n\n```css\n.milkdown .editor .paragraph {\n    margin: 1rem 0;\n}\n```\n\n## 选择二： 添加自定义类名\n\n你可以使用 `configure` 方法来为 node/mark 添加 css 类名。这样，你就可以使用像 `tailwind` 这样的 css 工具。\n\n```typescript\nimport { commonmarkNodes, commonmarkPlugins, heading, paragraph } from '@milkdown/preset-commonmark';\n\nconst nodes = commonmark\n    .configure(paragraph, {\n        className: () => 'my-custom-paragraph',\n    })\n    .configure(heading, {\n        className: (attrs) => `my-custom-heading my-h${attrs.level}`,\n    });\n\nEditor.make().use(nodes).use(commonmarkPlugins);\n```\n\n## 无头模式\n\n如果你偏向于自己编写样式，你也可以简单的对支持无头模式的插件调用`headless`方法。\n\n```typescript\nimport { commonmark } from '@milkdown/preset-commonmark';\n\nEditor.make().use(commonmark.headless());\n```\n\n支持无头模式的插件有：\n\n-   [@milkdown/preset-commonmark](https://www.npmjs.com/package/@milkdown/preset-commonmark)\n-   [@milkdown/preset-gfm](https://www.npmjs.com/package/@milkdown/preset-gfm)\n-   [@milkdown/plugin-table](https://www.npmjs.com/package/@milkdown/plugin-table)\n-   [@milkdown/plugin-math](https://www.npmjs.com/package/@milkdown/plugin-math)\n-   [@milkdown/plugin-tooltip](https://www.npmjs.com/package/@milkdown/plugin-tooltip)\n-   [@milkdown/plugin-slash](https://www.npmjs.com/package/@milkdown/plugin-slash)\n-   [@milkdown/plugin-emoji](https://www.npmjs.com/package/@milkdown/plugin-emoji)\n";
