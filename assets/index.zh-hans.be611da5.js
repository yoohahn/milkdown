export default"# 内置插件\n\nMilkdown 有许多内置插件，它们控制着整个编辑器的状态。\n这里列出了每个阶段中执行的插件以及它们的定时器和上下文。\n\n---\n\n## 准备阶段\n\n在这个阶段，milkdown 将会收集 node 和 mark 以及所有的用户配置。\n\n### Config\n\n-   名称：**config**\n-   定时器：\n    -   **Config**: 插件执行完毕。\n\n### Init\n\n-   名称：**init**\n-   上下文：\n    -   **initTimerCtx**: 决定加载插件的时机。\n        默认值：\n        -   **Config**\n    -   **editorCtx**: 保存编辑器类的实例。\n    -   **remarkCtx**: 保存 remark 实例。\n-   定时器：\n    -   **Initialize**: 插件执行完毕。\n\n---\n\n## 加载 Node 和 Mark\n\n在这个阶段，milkdown 将会加载 node 和 mark 并根据它们生成数据结构，例如 schema 和快捷键。\n\n### Schema\n\n-   名称：**schema**\n-   上下文：\n    -   **schemaTimerCtx**: 决定加载插件的时机。\n        默认值：\n        -   **Initialize**\n    -   **nodesCtx**: 保存编辑器的 node 列表。\n    -   **marksCtx**: 保存编辑器的 mark 列表。\n    -   **schemaCtx**: 保存 prosemirror schema。\n-   定时器：\n    -   **SchemaReady**: 插件执行完毕。\n\n### Parser\n\n-   名称：**parser**\n-   上下文：\n    -   **parserTimerCtx**: 决定加载插件的时机。\n        默认值：\n        -   **SchemaRead**\n    -   **parserCtx**: 保存 markdown 解析器。\n-   定时器：\n    -   **ParserReady**: 插件执行完毕。\n\n### Serializer\n\n-   名称：**serializer**\n-   上下文：\n    -   **serializerTimerCtx**: 决定加载插件的时机。\n        默认值：\n        -   **SchemaRead**\n    -   **serializerCtx**: 保存 markdown 序列化器。\n-   定时器：\n    -   **SerializerReady**: 插件执行完毕。\n\n### Node View\n\n-   名称：**nodeView**\n-   上下文：\n    -   **nodeViewTimerCtx**: 决定加载插件的时机。\n        默认值：\n        -   **SchemaRead**\n    -   **nodeViewCtx**: 保存 prosemirror 的 node view 映射表。\n-   定时器：\n    -   **NodeViewReady**: 插件执行完毕。\n\n### Keymap\n\n-   名称：**keymap**\n-   上下文：\n    -   **keymapTimerCtx**: 决定加载插件的时机。\n        默认值：\n        -   **SchemaRead**\n    -   **keymapCtx**: 保存 prosemirror 的 keymap 列表。\n-   定时器：\n    -   **KeymapReady**: 插件执行完毕。\n\n### Input Rules\n\n-   名称：**inputRules**\n-   上下文：\n    -   **inputRulesTimerCtx**: 决定加载插件的时机。\n        默认值：\n        -   **SchemaRead**\n    -   **inputRulesCtx**: 保存 prosemirror 的 input rules 列表。\n-   定时器：\n    -   **InputRulesReady**: 插件执行完毕。\n\n---\n\n## Create Editor\n\n在这个阶段，milkdown 将会创建 prosemirror 的 editor state 和 editor view。\n\n### Editor State\n\n-   名称：**editorState**\n-   上下文：\n    -   **editorStateTimerCtx**: 决定加载插件的时机。\n        默认值：\n        -   **KeymapReady**\n        -   **InputRulesReady**\n        -   **ParserReady**\n        -   **SerializerReady**\n    -   **editorStateCtx**: 保存 prosemirror 的 editor state。\n    -   **editorStateOptionsCtx**: 保存用户配置的用于创建 editor state 的参数。\n    -   **defaultValueCtx**: 保存了用于创建状态的默认值，可以是 json, dom 节点或 markdown 字符串。\n-   定时器：\n    -   **EditorStateReady**: 插件执行完毕。\n\n### Editor View\n\n-   名称：**editorView**\n-   上下文：\n    -   **editorViewTimerCtx**: 决定加载插件的时机。\n        默认值：\n        -   **NodeViewReady**\n        -   **EditorStateReady**\n    -   **editorViewCtx**: 保存 prosemirror 的 editor view。\n    -   **editorViewOptionsCtx**: 保存用户配置的用于创建 editor view 的参数。\n    -   **rootCtx**: 保存了用于挂在编辑器的 dom 节点。\n-   定时器：\n    -   **Complete**: 插件执行完毕。\n";
