export default'# 架构\n\nMilkdown 主要基于两个框架构建： [Prosemirror](https://prosemirror.net/) 和 [Remark](https://remark.js.org/)。\n正因如此, 你可以认为[解析器](/#/zh-hans/parser) 和 [序列化器](/#/zh-hans/serializer) 是能够让 remark 抽象语法树和 Prosemirror 的编辑器状态同步的桥梁。\n\n所以，对于任意时刻的 Milkdown 编辑器，它都有一个编辑器状态(editor state)，这一状态既可以渲染出编辑器的 UI，也可以用来被转换为 markdown 字符串。\n任何对编辑器的变更都不会直接修改编辑器的 UI，它会先创建一个新的编辑器状态，然后通过这一状态渲染新的 UI。\n\n```mermaid\ngraph BT;\n\tview[\\"Editor View (UI)"\\];\n\tdom(DOM Event);\n\ttr(Transaction);\n\tstate{{Editor State}};\n\n\tstring[/Markdown String/];\n\tast{{Remark AST}};\n\n\ttr -- create new --\x3e state;\n\tstate -- render --\x3e view;\n\tview -- user input --\x3e dom;\n\tdom --\x3e tr;\n\n\tast -- Parser --\x3e state;\n\tstate -- Serializer --\x3e ast;\n\n\n\tast --\x3e string;\n\tstring --\x3e ast;\n```\n';
